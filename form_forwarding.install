<?php

/*
 * UWP Webform Forwarding install file
 */
require_once 'include/portal_permission.inc';
/**
 * Implements hook_schema().
 */
function form_forwarding_schema() {
  $schema['form_forwarding_portals'] = array(
    'description' => 'A list of all the drupal forms that submit to an Webform Forwarding script',
    'fields' => array(
      'inid' => array(
        'description' => 'The primary identifier for a drupal webform and its corresponding Webform Forwarding script.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'drupal_nid' => array(
        'description' => 'The node id of the page the webform is on.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'Describe the portal.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'submission_url' => array(
        'description' => 'The URL for the Webform Forwarding submission',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'group_id' => array(
        'description' => 'The group allows for only specific portals to be shows to a given user ',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'date' => array(
        'description' => 'The date which the search was done',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('inid'),
  );

  $schema['form_forwarding_connections'] = array(
    'description' => 'The connections between a form element and an Webform Forwarding field',
    'fields' => array(
      'eid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'inid' => array(
        'description' => 'The primary identifier for a drupal webform and its corresponding Webform Forwarding script.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'drupal_element_key' => array(
        'description' => 'Drupal webform element key',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'third_party_element_key' => array(
        'description' => 'Third party element key',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('eid'),
    'foreign keys' => array(
      'inid' => array(
        'table' => 'form_forwarding_portals',
        'columns' => array('inid' => 'inid'),
      ),
    ),
  );

  $schema['form_forwarding_define_keys'] = array(
    'description' => 'The hard coded key => value form elements in the Webform Forwarding field',
    'fields' => array(
      'dkid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'inid' => array(
        'description' => 'The primary identifier for a drupal webform and its corresponding Webform Forwarding script.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'third_party_element_key' => array(
        'description' => 'Third party element key',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'third_party_element_value' => array(
        'description' => 'Third party element value',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('dkid'),
    'foreign keys' => array(
      'inid' => array(
        'table' => 'form_forwarding_portals',
        'columns' => array('inid' => 'inid'),
      ),
    ),
  );

  $schema['form_forwarding_file_keys'] = array(
    'description' => 'The file connections between a form element and an Webform Forwarding field',
    'fields' => array(
      'filekid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'inid' => array(
        'description' => 'The primary identifier for a drupal webform and its corresponding Webform Forwarding script.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'third_party_element_key' => array(
        'description' => 'THird Party element key',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'drupal_element_key' => array(
        'description' => 'Drupal webform element key',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('filekid'),
    'foreign keys' => array(
      'inid' => array(
        'table' => 'form_forwarding_portals',
        'columns' => array('inid' => 'inid'),
      ),
    ),
  );

  $schema['form_forwarding_permission'] = array(
    'description' => 'Permissions to view form forwarding portals',
    'fields' => array(
      'ffpid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rid' => array(
        'description' => 'Role id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tid' => array(
        'description' => 'the turm they have access to ',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('ffpid'),
    'foreign keys' => array(
      'rid' => array(
        'table' => 'role',
        'columns' => array('rid' => 'rid'),
      ),
      'tid' => array(
        'table' => 'taxonomy_term_data',
        'columns' => array('tid' => 'tid'),
      ),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function form_forwarding_install() {
  $new_vocab = (object) array(
        'name' => 'Webform Forwarding Groups',
        'description' => 'Groups webform forwarding portals into groups',
        'machine_name' => 'webform_forwarding_groups',
  );
  taxonomy_vocabulary_save($new_vocab);
  $vocabulary = taxonomy_vocabulary_machine_name_load('webform_forwarding_groups');
  $new_term_admin = (object) array(
        'name' => 'Admin',
        'vid' => $vocabulary->vid,
  );
  taxonomy_term_save($new_term_admin);
  $new_term_auth_user = (object) array(
        'name' => 'Authenticated User',
        'vid' => $vocabulary->vid,
  );
  taxonomy_term_save($new_term_auth_user);
//  $rid_admin = array_search('administrator', user_roles());
//  _create_permission($rid_admin, $new_term_admin->tid);
//  $rid_auth_user = array_search('authenticated user', user_roles());
//  _create_permission($rid_auth_user, $new_term_auth_user->tid);
}

/**
 * Implements hook_enable().
 */
//function form_forwarding_enable() {
//  $new_vocab = (object) array(
//    'name' => 'Webform Forwarding Groups',
//    'description' => 'Groups webform forwarding portals into groups',
//    'machine_name' => 'webform_forwarding_groups',
//  );
//  taxonomy_vocabulary_save($new_vocab);
//  $vocabulary = taxonomy_vocabulary_machine_name_load('webform_forwarding_groups');
//  $new_term_admin = (object) array(
//    'name' => 'Admin',
//    'vid' => $vocabulary->vid,
//  );
//  taxonomy_term_save($new_term_admin);
//  $new_term_auth_user = (object) array(
//    'name' => 'Authenticated User',
//    'vid' => $vocabulary->vid,
//  );
//  taxonomy_term_save($new_term_auth_user);
//  $rid_admin = array_search('administrator', user_roles());
//  _create_permission($rid_admin, $new_term_admin->tid);
//  $rid_auth_user = array_search('authenticated user', user_roles());
//  _create_permission($rid_auth_user, $new_term_auth_user->tid);
//}

/**
 * Implements hook_uninstall().
 */
function form_forwarding_uninstall() {
  $vocabulary = taxonomy_vocabulary_machine_name_load('webform_forwarding_groups');
  foreach (taxonomy_get_tree($vocabulary->vid) as $term) {
    taxonomy_term_delete($term->tid);
  }
  taxonomy_vocabulary_delete($vocabulary->vid);
}
<?php

/**
 * @file 
 * This Connects a Drupal webform to an ImageNow system
 * @author Stephen Corcoran
 */

/**
 * Implementation of the hook_menu()
 */
function uwpimagenow_menu() {
  $items = [];
  $items['admin/config/uwplatteville/imagenow'] = array(
    'title' => 'UW-Platteville ImageNow',
    'description' => 'Connect Drupal webforms to the ImageNow system. Tom Click Here!!!',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uwpimagenow_admin_settings'),
    'access arguments' => array('administer uwpimagenow'),
    'file' => 'uwpimagenow.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/uwplatteville/imagenow/portal'] = array(
    'title' => 'UW-Platteville ImageNow Portal',
    'description' => 'Portal Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uwpimagenow_portal_admin'),
    'access arguments' => array('administer uwpimagenow'),
    'file' => 'uwpimagenow_portal.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of hook_permission
 */
function uwpimagenow_permission() {
  return array(
    'administer uwpimagenow' => array(
      'title' => t('Administer ImageNow Portal Control'),
      'description' => t('Access to ImageNow configuration'),
    ),
  );
}

function _submit_to_imagenow(&$form_values) {
//  dpm($form_values);
  $portal = _get_portal_config($form_values['details']['nid'], FALSE);
//  dpm($portal);
  //create array of data to be posted
  $submitted_values = array();
  _get_subbmitted_values($submitted_values, $form_values['submitted']);
  $post_data = NULL;
  for ($i = 0; $i < count($portal['connections']); $i++) {
    $post_data[$portal['connections'][$i]['iek']] = $submitted_values[$portal['connections'][$i]['dek']];
  }
//  dpm($post_data);
//traverse array and prepare data for posting (key1=value1)
  foreach ($post_data as $key => $value) {
    $post_items[] = $key . '=' . $value;
  }
//  dpm($post_items);
//create the final string to be posted using implode()
  $post_string = implode('&', $post_items);

//we also need to add a question mark at the beginning of the string
  $post_string = '?' . $post_string;
//  dpm($post_string);
//we are going to need the length of the data string
  $data_length = strlen($post_string);

  //create cURL connection
  $curl_connection = curl_init($portal['imagenow_url']);

//set options
  curl_setopt($curl_connection, CURLOPT_CONNECTTIMEOUT, 30);
  curl_setopt($curl_connection, CURLOPT_USERAGENT, "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)");
  curl_setopt($curl_connection, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($curl_connection, CURLOPT_SSL_VERIFYPEER, false);
  curl_setopt($curl_connection, CURLOPT_FOLLOWLOCATION, 1);

//set data to be posted
  curl_setopt($curl_connection, CURLOPT_POSTFIELDS, $post_string);

//perform our request
  $result = curl_exec($curl_connection);
  dpm($result);
//show information regarding the request
  dpm(curl_getinfo($curl_connection));
  dpm(curl_errno($curl_connection) . '-' . curl_error($curl_connection));

//close the connection
  curl_close($curl_connection);
}

/**
 * Implementation of hook_form_submit.
 * 
 * Take the ImageNow forms that pass validation
 * and submit them to imagenow system.
 * 
 * @param type $form_id
 * @param type $form_state
 */
function uwpimagenow_form_validate($form, &$form_state) {
  if (form_get_errors()) {
    return;
  }
  _submit_to_imagenow($form_state['values']);
  watchdog("CMO-php", 'Test uwpimagenow');
}

function _is_imagenow_form($nid) {
  $dbNids = NULL;
  // Get the portals from the Database
  $result = db_select('uwpimagenow_portals', 'portals')
    ->fields('portals', array('drupal_nid'))
    ->orderBy('inid', 'ASC')
    ->execute();
  // Organize portal elements
  foreach ($result as $row) {
    $dbNids[] = $row->drupal_nid;
  }
  for ($i = 0; $i < count($dbNids); $i++) {
    if ($nid == $dbNids[$i]) {
      return $dbNids[$i];
    }
  }
  return NULL;
}

/**
 * Implements hook_form_alter().
 */
function uwpimagenow_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['nid'])) {
    $tmp = _is_imagenow_form($form['nid']['#value']);
    if ($tmp != NULL) {
      $form['#validate'][] = 'uwpimagenow_form_validate';
    }
  }
  //$index = $form['details']['nid']['#value'];
}

function _get_portal_connections($inid) {
  $portal_connections = [];
  // Get the connections from the Database
  $result = db_select('uwpimagenow_connections', 'connections')
    ->fields('connections', array('eid', 'drupal_element_key', 'imagenow_element_key'))
    ->condition('inid', $inid, '=')
    ->orderBy('eid', 'ASC')
    ->execute();
  // Organize connection elements
  foreach ($result as $row) {
    $row1 = [];
    $row1['eid'] = $row->eid;
    $row1['dek'] = $row->drupal_element_key;
    $row1['iek'] = $row->imagenow_element_key;
    $portal_connections[] = $row1;
  }
  return $portal_connections;
}

function _get_portal_config($cmo, $pid_flag) {
  $portal_config = null;
  $sqlQuery = db_select('uwpimagenow_portals', 'portals')
    ->fields('portals', array('inid', 'drupal_nid', 'description', 'imagenow_submission_url'));
  if ($pid_flag) {
    $sqlQuery->condition('inid', $cmo, '=');
  }
  else {
    $sqlQuery->condition('drupal_nid', $cmo, '=');
  }
  $result = $sqlQuery->orderBy('inid', 'ASC')->execute();
  // Organize portal elements

  foreach ($result as $row) {
    $portal_config['inid'] = $row->inid;
    $portal_config['fid'] = $row->drupal_nid;
    $portal_config['description'] = $row->description;
    $portal_config['imagenow_url'] = $row->imagenow_submission_url;
    $portal_config['connections'] = _get_portal_connections($row->inid);
  }
  return $portal_config;
}

function _get_subbmitted_values(&$flat_array, $array_in) {
  foreach ($array_in as $key => $value) {
    if (is_array($value) == false) {
      $flat_array[$key] = $value;
    }
    else {
      _get_subbmitted_values($flat_array, $value);
    }
  }
}
